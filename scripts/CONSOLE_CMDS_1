# Console Commands for Step 1
# Do not use echo
# Only edit the section of this document between CODE START and CODE END

### CODE START ###
# Verify versioning
/run flask shell -c "from scripts.version import get_version, validate_version; version = get_version(); assert validate_version(version), f'Invalid version format: {version}'; print(f'Current version: {version}')"

# Check Git status
/run git status

# Verify GitHub connection
/run git remote -v

# Check current branch
/run git branch --show-current

# Verify branch naming convention
/run python -c "import re; from scripts.version import get_version; version = get_version(); branch = subprocess.check_output(['git', 'branch', '--show-current']).decode().strip(); assert re.match(r'(feature|bugfix|hotfix|release|chore)/.+', branch), f'Invalid branch name: {branch}'; print(f'Branch {branch} follows naming conventions')"

# Verify version bump functionality
/run python -c "from scripts.version import bump_version; print(bump_version('patch'))"

# Verify GitHub push functionality
/run python -c "from scripts.version import push_to_github; print(push_to_github('test-branch', 'Test commit'))"

# Verify database migrations
/run flask db current

# Check application status
/run flask shell -c "from app import create_app; app = create_app(); print(app.config['ENV'])"

# Verify version file integrity
/run python -c "from scripts.version import get_version, parse_version; version = get_version(); parsed = parse_version(version); print(f'Parsed version: {parsed}')"
### CODE END ###

# Print the current datetime to console
/run scripts/print_datetime.py
/run Write-Host "Code Cycle Step 1 Ends"

# After running any console commands we go to STEP_2
/load scripts/STEP_2
