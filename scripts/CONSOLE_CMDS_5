# Console Commands for Step 5
# Do not use echo commands
# Only edit the section of this document between CODE START and CODE END

### CODE START ###
# Create production database backup
/run python -c "from scripts.version import create_db_backup; create_db_backup('instance/stipend.db')"

# Run database migrations
/run flask db upgrade

# Verify production environment
/run python -c "from scripts.version import validate_production_environment; print('Environment valid:', validate_production_environment())"

# Run final tests
/run pytest tests/ --cov=scripts.version --cov-report=term-missing

# Update release notes
/run python -c "from scripts.version import get_version; version = get_version(); open('RELEASE_NOTES.md', 'w').write(f'# Release {version}\n\n- Added version management system\n- Implemented database backup functionality\n- Improved production environment validation')"

# Commit and push changes
/run git add .
/run git commit -m "Release v0.2.0 - Version management and backup system"
/run git push origin feature/version-management
### CODE END ###

# Print the current datetime to console
/run scripts/print_datetime.py
/run Write-Host "Code Cycle Complete"

# Final updates
/add scripts/REQUESTS
/add scripts/MANAGER
/code Final cleanup before reset. Remove requests from MANAGER that have been implemented or scheduled for implementation. write a new DEVLOG based on this cycle. Add any requests for actions you need performed by me to REQUESTS. Update TODO list if needed. Keep PROJECT, CONVENTIONS, DEVLOG and TODO as compact as possible, prune and remove what you can without losing important information.

# Reset and restart Code Cycle
/reset
/load scripts\STEP_1
